ext.gradle_root = rootDir.absolutePath + "/gradle"


def build_versions = [
        target_sdk : 28,
        min_sdk    : 19,
        build_tools: "28.0.3",
]
ext.build_versions = build_versions


def app_config = [
        applicationId: "pl.atlantischi.wechatmoments",
        versionCode  : 1000,
        versionName  : '1.000',
]
ext.app_config = app_config




def versions = [
        android_gradle_plugin: '3.6.1',
        kotlin               : "1.3.30",
        kotlin_coroutines    : "1.1.1",

        appcompat_V7         : "1.1.0-alpha05",
        recyclerView         : "1.0.0",
        annotations          : "1.1.0",
        constraint_layout    : "1.1.3",
        material             : "1.0.0",

        lifecycle            : "2.0.0",
        room                 : "2.1.0",

        anko                 : "0.10.8",

        runner               : "1.2.0",
        espresso             : "3.2.0",

        rxjava               : "2.1.3",
        rxkotlin             : "2.3.0",
        rxandroid            : "2.0.1",
        rxbinding            : "3.0.0-alpha1",

        retrofit             : "2.3.0",
        moshi                : "1.8.0",

        glide                : "4.9.0",
        glide_okhttp3        : "1.5.0@aar",

        smart_refresh_layout : "1.1.0-andx-11",
]
ext.versions = versions





def deps = [
        android_gradle_plugin: "com.android.tools.build:gradle:$versions.android_gradle_plugin",
]


def kotlin = [
        stdlib            : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin",
        plugin            : "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin",
        extensions        : "org.jetbrains.kotlin:kotlin-android-extensions:$versions.kotlin",
        reflect           : "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin",
        coroutines_core   : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlin_coroutines",
        coroutines_android: "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlin_coroutines",
]
deps.kotlin = kotlin


def support = [
        appcompatV7      : "androidx.appcompat:appcompat:$versions.appcompat_V7",
        recyclerView     : "androidx.recyclerview:recyclerview:$versions.recyclerView",
        design           : "com.google.android.material:material:$versions.material",
        annotations      : "androidx.annotation:annotation:$versions.annotations",
        constraint_layout: "androidx.constraintlayout:constraintlayout:$versions.constraint_layout",
]
deps.support = support

def lifecycle = [
        extensions     : "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle",
        viewmodel      : "androidx.lifecycle:lifecycle-viewmodel:$versions.lifecycle",
        livedata       : "androidx.lifecycle:lifecycle-livedata:$versions.lifecycle",
        runtime        : "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle",
        compiler       : "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle",
]
deps.lifecycle = lifecycle


def room = [
        runtime  : "androidx.room:room-runtime:$versions.room",
        compiler : "androidx.room:room-compiler:$versions.room",
]
deps.room = room

def ktx = [
        core      : "androidx.core:core-ktx:1.0.2",
        viewmodel : "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0-alpha01",
]
deps.ktx = ktx

def anko = [
        anko    : "org.jetbrains.anko:anko:$versions.anko",
        commons : "org.jetbrains.anko:anko-commons:$versions.anko",
]
deps.anko = anko

def retrofit = [
        runtime : "com.squareup.retrofit2:retrofit:$versions.retrofit",
        rxjava2 : "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit",
        moshi   : "com.squareup.retrofit2:converter-moshi:$versions.retrofit",
        scalars : "com.squareup.retrofit2:converter-scalars:2.5.0",
]
deps.retrofit = retrofit

def moshi = [
        moshi         : "com.squareup.moshi:moshi:$versions.moshi",
        kotlin        : "com.squareup.moshi:moshi-kotlin:$versions.moshi",
        kotlin_codegen: "com.squareup.moshi:moshi-kotlin-codegen:$versions.moshi",
]
deps.moshi = moshi

def glide = [
        runtime : "com.github.bumptech.glide:glide:$versions.glide",
        compiler: "com.github.bumptech.glide:compiler:$versions.glide",
        okhttp3 : "com.github.bumptech.glide:okhttp3-integration:$versions.glide",
]
deps.glide = glide


def test = [
        junit : "junit:junit:4.12",
        runner: "com.android.support.test:runner:$versions.runner",
        rules : "com.android.support.test:rules:$versions.runner",
]
deps.test = test

def espresso = [
        core           : "androidx.test.espresso:espresso-core:$versions.espresso",
        contrib        : "androidx.test.espresso:espresso-contrib:$versions.espresso",
        web            : "androidx.test.espresso:espresso-web:$versions.espresso",
        idling_resource: "androidx.test.espresso:espresso-idling-resource:$versions.espresso",
        intents        : "androidx.test.espresso:espresso-intents:$versions.espresso",
        remote         : "androidx.test.espresso:espresso-remote:$versions.espresso",
        accessibility  : "androidx.test.espresso:espresso-accessibility:$versions.espresso",
]
deps.espresso = espresso

def ui = [
        smart_refresh_layout: "com.scwang.smartrefresh:SmartRefreshLayout:$versions.smart_refresh_layout",
        smart_refresh_header: "com.scwang.smartrefresh:SmartRefreshHeader:$versions.smart_refresh_layout",

        bravh               : "com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.46",
        ninegridview        : "com.lzy.widget:ninegridview:0.2.0",
]
deps.ui = ui





ext.deps = deps

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.mavenCentral()
    handler.maven { url "https://jitpack.io" }
}

ext.addRepos = this.&addRepos